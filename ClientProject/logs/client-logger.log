2020-08-05 14:54:42,403 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 14:54:42,464 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 14:54:42,480 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:54:43,545 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:54:43,547 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:54:43,633 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 14:54:43,880 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 14:54:43,881 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 14:54:43,882 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:54:44,199 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:54:44,200 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:54:44,246 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 23 user's [1] events in year and month: [2020, 8]
2020-08-05 14:54:44,251 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 53684
2020-08-05 14:54:44,688 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:54:44,688 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:54:44.688
2020-08-05 14:54:44,689 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:54:44.688
2020-08-05 14:54:44,689 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:54:44,729 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:54:44,729 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:54:44,730 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:54:44,730 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 14:54:44,730 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 14:54:45,517 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 14:54:45,517 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:54:46,256 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:54:46,257 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:54:46,262 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 14:54:46,263 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 14:54:46,264 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:54:48,267 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:54:48,267 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:54:48,285 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:24
2020-08-05 14:55:00,251 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:55:00,253 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:55:00.253
2020-08-05 14:55:00,255 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:55:00.253
2020-08-05 14:55:00,256 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:55:00,263 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:55:00,264 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:55:00,264 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:56:00,251 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:56:00,251 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:56:00.251
2020-08-05 14:56:00,252 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:56:00.251
2020-08-05 14:56:00,252 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:56:00,257 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:56:00,257 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:56:00,257 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:57:00,253 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:57:00,254 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:57:00.254
2020-08-05 14:57:00,255 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:57:00.254
2020-08-05 14:57:00,255 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:57:00,272 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:57:00,273 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:57:00,274 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:58:19,917 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 14:58:19,944 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 14:58:19,955 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:20,061 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:20,063 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:20,114 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 14:58:20,248 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 14:58:20,249 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 14:58:20,250 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:20,267 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:20,268 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:20,317 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 23 user's [1] events in year and month: [2020, 8]
2020-08-05 14:58:20,325 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 53900
2020-08-05 14:58:20,811 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:58:20,811 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:58:20.811
2020-08-05 14:58:20,812 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:58:20.811
2020-08-05 14:58:20,812 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:20,826 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:20,827 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:20,827 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:58:20,828 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 14:58:20,828 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 14:58:21,405 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 14:58:21,405 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:22,109 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:22,109 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:22,113 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 14:58:22,114 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 14:58:22,114 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:23,913 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:23,914 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:23,940 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:24
2020-08-05 14:58:44,230 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 14:58:44,273 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 14:58:44,284 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:44,389 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:44,390 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:44,438 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 14:58:44,582 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 14:58:44,584 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 14:58:44,585 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:44,599 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:44,600 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:44,649 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 23 user's [1] events in year and month: [2020, 8]
2020-08-05 14:58:44,656 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 53924
2020-08-05 14:58:45,114 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:58:45,114 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:58:45.114
2020-08-05 14:58:45,115 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:58:45.114
2020-08-05 14:58:45,116 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:45,127 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:45,130 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:45,132 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 14:58:45,133 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 14:58:45,133 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 14:58:45,691 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 14:58:45,691 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:46,319 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:46,321 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:46,335 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 14:58:46,336 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 14:58:46,337 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:58:47,035 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:58:47,036 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:58:47,051 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:24
2020-08-05 14:59:00,655 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 14:59:00,655 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T14:59:00.655
2020-08-05 14:59:00,656 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T14:59:00.655
2020-08-05 14:59:00,656 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 14:59:00,661 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 14:59:00,662 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 14:59:00,662 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 15:31:29,912 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 15:31:29,951 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 15:31:29,966 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:30,425 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:30,426 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:30,499 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 15:31:30,644 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 15:31:30,645 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 15:31:30,645 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:30,719 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:30,719 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:30,786 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 23 user's [1] events in year and month: [2020, 8]
2020-08-05 15:31:30,794 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 55890
2020-08-05 15:31:31,300 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 15:31:31,300 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T15:31:31.300
2020-08-05 15:31:31,301 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T15:31:31.300
2020-08-05 15:31:31,301 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:31,336 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:31,338 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:31,340 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 15:31:31,341 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 15:31:31,341 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 15:31:32,071 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 15:31:32,071 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:33,398 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:33,399 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:33,403 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 15:31:33,403 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 15:31:33,404 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:34,971 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:34,971 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:34,993 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:25
2020-08-05 15:31:36,574 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting event by user's [1] and event's [197] ID
2020-08-05 15:31:36,575 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/197
2020-08-05 15:31:36,575 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:31:36,584 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:31:36,585 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:31:36,587 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning event by user's [1] and event's [197] ID
2020-08-05 15:31:48,933 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Deleting event [197]
2020-08-05 15:31:48,934 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP DELETE http://localhost:8080/events/1/197
2020-08-05 15:31:57,476 ERROR com.example.client.clients.EventsClient [JavaFX Application Thread] Error while connecting to server
org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8080/events/1/197": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:695)
	at org.springframework.web.client.RestTemplate.delete(RestTemplate.java:541)
	at com.example.client.clients.EventsClient.deleteEvent(EventsClient.java:208)
	at com.example.gui.controllers.PlanItAddEventController.delete(PlanItAddEventController.java:403)
	at com.example.gui.controllers.PlanItAddEventController.lambda$initialize$3(PlanItAddEventController.java:172)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8411)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:410)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$4(WinApplication.java:186)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:371)
	at sun.net.www.protocol.http.HttpURLConnection.setNewClient(HttpURLConnection.java:776)
	at sun.net.www.protocol.http.HttpURLConnection.setNewClient(HttpURLConnection.java:764)
	at sun.net.www.protocol.http.HttpURLConnection.writeRequests(HttpURLConnection.java:706)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1591)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:82)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 52 common frames omitted
2020-08-05 15:32:00,795 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 15:32:00,796 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T15:32:00.796
2020-08-05 15:32:00,798 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T15:32:00.796
2020-08-05 15:32:00,799 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:32:02,803 ERROR com.example.client.clients.EventsClient [JavaFX Application Thread] Error while connecting to server
org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8080/events/alert/1/2020-08-05T15:32:00.796": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:695)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:324)
	at com.example.client.clients.EventsClient.getEventsToAlert(EventsClient.java:119)
	at com.example.gui.controllers.PlanItMainWindowController.lambda$runAlertTask$2(PlanItMainWindowController.java:186)
	at com.sun.javafx.application.PlatformImpl.lambda$null$5(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$6(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$4(WinApplication.java:186)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 11 common frames omitted
2020-08-05 15:33:00,795 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 15:33:00,796 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T15:33:00.796
2020-08-05 15:33:00,798 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T15:33:00.796
2020-08-05 15:33:00,799 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:33:01,049 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:33:01,049 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:33:01,052 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 15:33:15,198 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Deleting event [197]
2020-08-05 15:33:15,199 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP DELETE http://localhost:8080/events/1/197
2020-08-05 15:33:15,347 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:33:15,347 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Event [197] successsffully deleted
2020-08-05 15:33:15,352 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 15:33:15,352 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 15:33:15,353 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:33:15,396 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:33:15,397 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:33:15,401 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 22 user's [1] events in year and month: [2020, 8]
2020-08-05 15:33:15,404 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 15:33:15,404 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 15:33:15,405 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 15:33:15,405 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:33:15,997 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:33:15,999 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:33:16,000 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 15:33:16,001 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 15:33:16,003 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:33:17,083 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:33:17,084 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:33:17,088 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:25
2020-08-05 15:48:09,761 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 15:48:09,788 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 15:48:09,797 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:48:09,922 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:48:09,923 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:48:09,970 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 15:48:10,102 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 15:48:10,104 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 15:48:10,105 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:48:10,126 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:48:10,127 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:48:10,175 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 22 user's [1] events in year and month: [2020, 8]
2020-08-05 15:48:10,181 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 56890
2020-08-05 15:48:10,654 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 15:48:10,655 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T15:48:10.655
2020-08-05 15:48:10,655 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T15:48:10.655
2020-08-05 15:48:10,656 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:48:10,667 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:48:10,668 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:48:10,669 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 15:48:10,671 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 15:48:10,671 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 15:48:11,233 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 15:48:11,233 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:48:11,846 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:48:11,846 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:48:11,851 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 15:48:11,852 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 15:48:11,853 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:48:12,710 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:48:12,711 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:48:12,730 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:25
2020-08-05 15:51:36,987 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 15:51:37,015 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 15:51:37,025 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:51:37,131 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:51:37,132 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:51:37,184 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 15:51:37,322 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 15:51:37,323 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 15:51:37,323 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:51:37,334 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:51:37,335 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:51:37,381 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 22 user's [1] events in year and month: [2020, 8]
2020-08-05 15:51:37,386 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 57097
2020-08-05 15:51:37,830 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 15:51:37,830 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T15:51:37.830
2020-08-05 15:51:37,831 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T15:51:37.830
2020-08-05 15:51:37,832 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:51:37,847 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:51:37,848 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:51:37,849 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 15:51:37,850 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 15:51:37,850 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 15:51:38,446 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 15:51:38,446 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:51:39,098 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:51:39,100 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:51:39,112 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 15:51:39,113 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 15:51:39,114 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:51:39,684 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 15:51:39,684 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 15:51:39,696 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:25
2020-08-05 15:55:40,203 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 15:55:40,230 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/test/test
2020-08-05 15:55:40,240 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:55:40,272 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 404 NOT_FOUND
2020-08-05 15:55:40,281 ERROR com.example.gui.controllers.PlanItLoginController [JavaFX Application Thread] Error logging in user test. HTTP Status: 404
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2020-08-05T13:55:40.263+0000","status":404,"error":"Not Found","message":"No message available","path":"/test/test"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:112)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:782)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:740)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:695)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:324)
	at com.example.client.clients.UsersClient.getUserByUserNameAndUserPassword(UsersClient.java:50)
	at com.example.gui.controllers.PlanItLoginController.buttonLoginHandler(PlanItLoginController.java:96)
	at com.example.gui.controllers.PlanItLoginController.lambda$addHandlers$0(PlanItLoginController.java:73)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8411)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:410)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$4(WinApplication.java:186)
	at java.lang.Thread.run(Thread.java:748)
2020-08-05 15:57:16,855 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 15:57:16,861 DEBUG com.example.client.clients.UsersClient [JavaFX Application Thread] http://localhost:8080/{userName}/{userPassword}
2020-08-05 15:57:16,894 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/test/test
2020-08-05 15:57:16,904 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 15:57:16,925 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 404 NOT_FOUND
2020-08-05 15:57:16,934 ERROR com.example.gui.controllers.PlanItLoginController [JavaFX Application Thread] Error logging in user test. HTTP Status: 404
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2020-08-05T13:57:16.921+0000","status":404,"error":"Not Found","message":"No message available","path":"/test/test"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:112)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:782)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:740)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:695)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:324)
	at com.example.client.clients.UsersClient.getUserByUserNameAndUserPassword(UsersClient.java:51)
	at com.example.gui.controllers.PlanItLoginController.buttonLoginHandler(PlanItLoginController.java:96)
	at com.example.gui.controllers.PlanItLoginController.lambda$addHandlers$0(PlanItLoginController.java:73)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8411)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:410)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$4(WinApplication.java:186)
	at java.lang.Thread.run(Thread.java:748)
2020-08-05 16:03:22,386 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 16:03:22,389 DEBUG com.example.client.clients.UsersClient [JavaFX Application Thread] http://localhost:8080/{userName}/{userPassword}
2020-08-05 16:03:22,392 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/test/test
2020-08-05 16:03:22,393 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:03:22,414 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 404 NOT_FOUND
2020-08-05 16:03:22,416 ERROR com.example.gui.controllers.PlanItLoginController [JavaFX Application Thread] Error logging in user test. HTTP Status: 404
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : [{"timestamp":"2020-08-05T14:03:22.411+0000","status":404,"error":"Not Found","message":"No message available","path":"/test/test"}]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:112)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:782)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:740)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:695)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:324)
	at com.example.client.clients.UsersClient.getUserByUserNameAndUserPassword(UsersClient.java:51)
	at com.example.gui.controllers.PlanItLoginController.buttonLoginHandler(PlanItLoginController.java:96)
	at com.example.gui.controllers.PlanItLoginController.lambda$addHandlers$0(PlanItLoginController.java:73)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8411)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:394)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:432)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:410)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:431)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$4(WinApplication.java:186)
	at java.lang.Thread.run(Thread.java:748)
2020-08-05 16:04:36,681 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] Logging user by his username and password: [test]
2020-08-05 16:04:36,709 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/users/test/test
2020-08-05 16:04:36,719 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:04:36,830 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 16:04:36,832 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 16:04:36,888 INFO com.example.client.clients.UsersClient [JavaFX Application Thread] User testsuccessfully logged in
2020-08-05 16:04:37,029 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events in year and month: [2020, 8]
2020-08-05 16:04:37,030 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/1/2020/8
2020-08-05 16:04:37,031 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:04:37,045 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 16:04:37,046 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 16:04:37,086 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning 22 user's [1] events in year and month: [2020, 8]
2020-08-05 16:04:37,092 DEBUG com.example.gui.controllers.PlanItMainWindowController [Thread-5] LocalTime.now().toSecondOfDay() = 57877
2020-08-05 16:04:37,411 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Getting all user's [1] events to alert.
2020-08-05 16:04:37,411 DEBUG com.example.client.clients.EventsClient [JavaFX Application Thread] Current time is:2020-08-05T16:04:37.411
2020-08-05 16:04:37,412 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/events/alert/1/2020-08-05T16:04:37.411
2020-08-05 16:04:37,414 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:04:37,425 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 16:04:37,426 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 16:04:37,428 INFO com.example.client.clients.EventsClient [JavaFX Application Thread] Returning all user's [1] events to alert.
2020-08-05 16:04:37,429 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting weather forecast
2020-08-05 16:04:37,430 INFO com.example.client.clients.WeatherClient [JavaFX Application Thread] Getting public IP adress of device
2020-08-05 16:04:37,956 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET https://api.ipify.org?format=json
2020-08-05 16:04:37,957 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:04:38,574 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 16:04:38,576 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 16:04:38,584 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Public IP adress of client device: 147.78.169.2
2020-08-05 16:04:38,584 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] HTTP GET http://localhost:8080/weather/147.78.169.2
2020-08-05 16:04:38,585 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Accept=[text/plain, application/json, application/*+json, */*]
2020-08-05 16:04:39,479 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Response 200 OK
2020-08-05 16:04:39,479 DEBUG org.springframework.core.log.CompositeLog [JavaFX Application Thread] Reading to [java.lang.String] as "application/json"
2020-08-05 16:04:39,493 DEBUG com.example.client.clients.WeatherClient [JavaFX Application Thread] Today's min temperature: 17, Today's max temperature:25
